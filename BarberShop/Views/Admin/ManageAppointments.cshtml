@model IEnumerable<BarberShop.Models.Appointment>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Randevu Yönetimi";
}

<h2>Randevu Yönetimi</h2>

<table class="table table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Müşteri</th>
            <th>Hizmet</th>
            <th>Çalışan</th>
            <th>Tarih</th>
            <th>Durum</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var appointment in Model)
        {
            <tr>
                <td>@appointment.Id</td>
                <td>@appointment.UserName</td>
                <td>@appointment.Service.Name</td>
                <td>@appointment.Employee.Name</td>
                <td>@appointment.AppointmentDate.ToString("dd.MM.yyyy HH:mm")</td>
                <td>@appointment.Status</td>
                <td>
                    <a href="@Url.Action("EditAppointment", "Admin", new { id = appointment.Id })" class="btn btn-primary btn-sm">Düzenle</a>
                    <a href="@Url.Action("DeleteAppointment", "Admin", new { id = appointment.Id })" class="btn btn-danger btn-sm">Sil</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>Çalışan Yönetimi</h2>
<ul id="employee-list"></ul>

<script>
    fetch('https://localhost:5001/api/EmployeesApi')
        .then(response => response.json())
        .then(data => {
            const employeeList = document.getElementById('employee-list');
            data.forEach(employee => {
                const listItem = document.createElement('li');
                listItem.textContent = `${employee.name} (${employee.specialization})`;
                employeeList.appendChild(listItem);
            });
        })
        .catch(error => console.error('Error fetching employees:', error));
</script>
